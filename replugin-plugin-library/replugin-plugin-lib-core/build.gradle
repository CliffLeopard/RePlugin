/*
 * Copyright (C) 2005-2017 Qihoo 360 Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed To in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

apply plugin: 'com.android.library'

def repluginMinminSdkVersion = 1
def repluginTargetSdkVersion = 25
def repluginCompileSdkVersion = 25
def repluginBuildToolsVersion = '25.0.3'

if (rootProject.ext.has('minSdkVersion')) {
    repluginMinminSdkVersion = rootProject.ext.minSdkVersion
}
if (rootProject.ext.has('compileSdkVersion')) {
    repluginCompileSdkVersion = rootProject.ext.compileSdkVersion
}
if (rootProject.ext.has('targetSdkVersion')) {
    repluginTargetSdkVersion = rootProject.ext.targetSdkVersion
}
if (rootProject.ext.has('buildToolsVersion')) {
    repluginBuildToolsVersion = rootProject.ext.buildToolsVersion
}

android {
    compileSdkVersion repluginCompileSdkVersion
    buildToolsVersion repluginBuildToolsVersion

    defaultConfig {
        minSdkVersion repluginMinminSdkVersion
        targetSdkVersion repluginTargetSdkVersion
        versionCode 1
        versionName rootProject.ext.rpPluginLibCoreVersion
        consumerProguardFiles 'replugin-library-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    //compile fileTree(dir: 'libs', include: ['*.jar'])
}

//以下为生成jar包的脚本代码
def SDK_BASENAME = "replugin-plugin-lib-core"
def SDK_VERSION = rootProject.ext.rpPluginLibCoreVersion
def sdkDestinationPath = "build"
//def zipFile = file('build/intermediates/bundles/release/classes.jar')
def zipFile = file('build/intermediates/packaged-classes/release/classes.jar')



task deleteBuild(type: Delete) {
    delete sdkDestinationPath + SDK_BASENAME + SDK_VERSION + ".jar"
}
task makeJar(type: Jar) {
    from zipTree(zipFile)
    baseName = SDK_BASENAME + SDK_VERSION
    destinationDir = file(sdkDestinationPath)
}
makeJar.dependsOn(deleteBuild, assemble)

apply from: '../../rp-publish.gradle'